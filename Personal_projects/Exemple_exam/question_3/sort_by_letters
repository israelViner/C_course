#include <stdlib.h>


#define ASCII 128


void arrange(char* arr[], int n, char* s) {
	int len_s = 0;
	int *arr_s = fill_ascii(s);
	int j = 0;
	for (int i = 0; i < ASCII; ++i) {
		while (j < n) {
			for (int k = j; k < n; ++k) {
				int distance = check_distance(arr_s, arr[k]); 
				if (distance == j)
					swap(&arr[k], &arr[j++]);
			}
		}
	}
	free(arr_s);
}


void swap(char** k, char** j) {
	char *temp = *k;
	*k = *j;
	*j = temp;
}


int check_distance(int* arr_s, char* k) {
	int distance = 0;
	int *arr_k = fill_ascii(k);
	for (int i = 0; i < ASCII; ++i) {
		if (*(arr_s + i) == 1 && *(arr_k + i) == 0)
			++distance;
	}
	free(arr_k);
	return distance;
}


int* fill_ascii(char* s) {
	int* arr = (int *)calloc(ASCII, sizeof(int));
	int i = 0;
	while (*(s + i) != '\0') {
		*(arr + *(s + i)) = 1;
		++i;
	}
	return arr;
}
